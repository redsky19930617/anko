buildscript {
    ext.kotlin_version = '1.0.0-beta-2423'
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion %SDK_VERSION
    buildToolsVersion "23.0.1"

    defaultConfig {
        targetSdkVersion %SDK_VERSION
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
}

gradle.projectsEvaluated {
    tasks.generateReleaseBuildConfig.enabled = false
}

dependencies {
    repositories {
        jcenter()
    }

    provided fileTree(dir: '../../original/%ORIGINAL_VERSION', include: ['*.jar'])
    provided "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    if ("%ARTIFACT_VERSION" != "common") {
        provided files('../../zip/anko-common.jar')
    }
    if ("%ARTIFACT_VERSION" != "common" && !"%ARTIFACT_VERSION".startsWith("sdk")) {
        provided files('../../zip/anko-sdk%SDK_VERSION.jar')
    }
}

task androidReleaseJar(type: Jar, dependsOn: assembleRelease) {
    from "$buildDir/intermediates/classes/release/"
}

task androidReleaseSources(type: Jar, dependsOn: assembleRelease) {
    from "src/main/kotlin"
}

apply plugin: 'maven-publish'

publishing {
    publications {
        maven(MavenPublication) {
            groupId POM_ARTEFACT_GROUP
            artifactId POM_ARTEFACT_ID
            version POM_ARTEFACT_VERSION

            artifact androidReleaseJar
            artifact androidReleaseSources {
                classifier "sources"
            }

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'anko'
                    description 'Kotlin DSL for Android'
                    url projectUrl

                    scm {
                        url scmUrl
                        connection connectionUrl
                        developerConnection developerConnectionUrl
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                            comments 'A business-friendly OSS license'
                        }
                    }
                    developers {
                        developer {
                            id 'JetBrains'
                            name 'JetBrains Team'
                            organization 'JetBrains'
                            organizationUrl 'http://www.jetbrains.com'
                        }
                    }
                }

                if ("%ARTIFACT_VERSION" != "common") {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    addDependency(dependenciesNode, POM_ARTEFACT_GROUP, "anko-common", POM_ARTEFACT_VERSION)

                    if ("%ARTIFACT_VERSION" == "appcompat-v7") {
                        addDependency(dependenciesNode, POM_ARTEFACT_GROUP, "anko-support-v4", POM_ARTEFACT_VERSION)
                    }
                }
            }
        }
    }
}

def addDependency(Node dependenciesNode, String groupId, String artifactId, String version) {
    def dependencyNode = dependenciesNode.appendNode('dependency')
    dependencyNode.appendNode('groupId', groupId)
    dependencyNode.appendNode('artifactId', artifactId)
    dependencyNode.appendNode('version', version)
}

publishing {
    repositories {
        maven {
            url "$buildDir/repo"
        }
    }
}